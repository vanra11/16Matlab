 % Dataset: [income, education, credit card score, loan_approval]
data = [
    6000, 12, 1, 1;
    8500, 10, 2, 0; 
    3500, 11, 1, 1; 
    8000, 14, 3, 1; 
    3000, 9, 2, 0;  
    4500, 13, 3, 1; 
    1800, 12, 1, 1; 
    8800, 10, 2, 0;  
];

% Define the new student with unknown loan approval status (test data)
new_student = [2000, 11, 1]; % [income, education, credit card score]

% Define the value of K for the K-nearest neighbors algorithm
K = 3;

distances = sqrt(sum((data(:, 1:3) - new_student) .^ 2, 2));

% Sort the distances in ascending order and get the indices of the K nearest neighbors
[~, sorted_indices] = sort(distances);

% Get the loan approval status of the K nearest neighbors
k_nearest_labels = data(sorted_indices(1:K), 4);

predicted_approval = mode(k_nearest_labels);

% Separate the data based on loan approval status for visualization
approved_students = data(data(:, 4) == 1, :);
not_approved_students = data(data(:, 4) == 0, :);

% Create a 3D scatter plot for visualization
figure;
scatter3(approved_students(:, 1), approved_students(:, 2), approved_students(:, 3), 'g', 'filled');
hold on;
scatter3(not_approved_students(:, 1), not_approved_students(:, 2), not_approved_students(:, 3), 'r', 'filled');
scatter3(new_student(1), new_student(2), new_student(3), 'b', 'filled');

% Draw a boundary around the K-nearest neighbors
boundary_students = data(sorted_indices(1:K), :);
scatter3(boundary_students(:, 1), boundary_students(:, 2), boundary_students(:, 3), 100, 'k', 'filled');

% Set axis labels and plot title
xlabel('Income');
ylabel('Education Level');
zlabel('City');
title('K-Nearest Neighbors for Loan Approval Prediction');

% Legend for the plot
legend('Approved Students', 'Not Approved Students', 'New Student', 'K-Nearest Neighbors', 'Location', 'northwest');

% Display the prediction result
if predicted_approval == 1
    disp('Loan is predicted to be approved (Yes).');
else
    disp('Loan is predicted not to be approvedÂ (No).');
end
